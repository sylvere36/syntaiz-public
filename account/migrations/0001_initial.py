# Generated by Django 5.2.1 on 2025-06-04 09:28

import account.managers
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name="Nom d'utilisateur")),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='Adresse Email')),
                ('sexe', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('default_role', models.CharField(choices=[('user', 'Utilisateur'), ('admin', 'Administrateur'), ('super_admin', 'Super Administrateur')], default='user', max_length=30)),
                ('is_superuser', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
    ]
